<template>
  <div class="container">
    <div class="form-container">
      <h1>S√©lection de l'√âquipage</h1>
      
      <!-- ‚úÖ Affichage des donn√©es du vol avec une v√©rification -->
      <p v-if="flightData.numVoyage">
        Vol: {{ flightData.numVoyage }} | √âtape: {{ flightData.etape }} | Date: {{ flightData.dateDepart }}
      </p>
      <p v-else class="error">‚ùå Aucune donn√©e de vol re√ßue !</p>

      <form @submit.prevent="submitCrew">
        <div class="form-grid">
          <div v-for="(pn, index) in crewSelection" :key="index" class="form-group">
            <label>Personnel Navigant {{ index + 1 }}</label>
            <select v-model="pn.pnId">
              <option value="">S√©lectionner un PN</option>
              <option v-for="member in personnel" :key="member.matricule_pn" :value="member.matricule_pn">
                {{ member.nom }} {{ member.prenom }} ({{ member.matricule_pn }})
              </option>
            </select>

            <label>Position</label>
            <select v-model="pn.position">
              <option value="Pilote">Pilote</option>
              <option value="Copilote">Copilote</option>
              <option value="Mise en place">Mise en place </option>
              <option value="PNC">PNC</option>
            </select>
          </div>
        </div>

        <button type="submit" class="btn save">üíæ Enregistrer</button>
      </form>
    </div>
  </div>
</template>

<script>

export default {
  props: {
    numVol: Number, // R√©cup√®re l'ID du vol depuis VolReel.vue
  },
  data() {
    return {
      flightData: {
        numVoyage: "Inconnu",
        etape: "Inconnu",
        dateDepart: "Inconnu",
      }, 
      personnel: [], 
      crewSelection: [
        { pnId: "", position: "" },
        { pnId: "", position: "" },
        { pnId: "", position: "" },
        { pnId: "", position: "" },
      ],
    };
  },
  mounted() {
    console.log("üì° Donn√©es de vol re√ßues :", this.$route.params);

    // ‚úÖ V√©rification des param√®tres re√ßus et mise √† jour de flightData
    if (this.$route.params.numVoyage) {
      this.flightData = {
        numVoyage: this.$route.params.numVoyage,
        etape: this.$route.params.etape,
        dateDepart: this.$route.params.dateDepart,
      };
    } else {
      console.warn("‚ö†Ô∏è Aucune donn√©e de vol re√ßue !");
    }

    this.fetchPersonnel();
  },
  methods: {
    async fetchPersonnel() {
      try {
        
        console.log("üì° R√©cup√©ration du personnel...");
        const response = await fetch("http://localhost:5000/api/personnels");
        const data = await response.json();
        console.log("‚úÖ Donn√©es re√ßues :", data);
        
        this.personnel = data.map(member => ({
          matricule_pn: member.matricule_pn,
          nom: member.nom,
          prenom: member.prenom,
          code_grade: member.code_grade,
          groupe_sociopro: member.groupe_sociopro
        }));
      } catch (error) {
        console.error("‚ùå Erreur chargement PN :", error);
      }
    },
    async submitCrew() {
  try {
    const crewData = this.crewSelection
      .filter(pn => pn.pnId && pn.position)
      .map(pn => ({
        id: this.numVol, // ‚úÖ Utilise bien l'ID r√©cup√©r√© de VolReel.vue
        matricule_pn: pn.pnId,
        code_position: pn.position
      }));

    if (crewData.length === 0) {
      alert("‚ùå Aucun √©quipage s√©lectionn√© !");
      return;
    }

    console.log("üì§ Donn√©es √©quipage envoy√©es:", JSON.stringify(crewData, null, 2));

    const response = await fetch("http://localhost:5000/api/participations", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(crewData),
    });

    const data = await response.json();
    if (response.ok) {
      alert("‚úÖ √âquipage enregistr√© avec succ√®s !");
    } else {
      alert("‚ùå Erreur: " + data.error);
    }
  } catch (error) {
    console.error("‚ùå Erreur enregistrement √©quipage:", error);
  }
}
,
  },
};
</script>

<style>
.error {
  color: red;
  font-weight: bold;
}
</style>
